---
- name: Create vyos buildbox
  hosts: localhost
  gather_facts: True
  connection: local

  vars:
    machine_type: g1-small
    image: debian-8
    service_account_email: vyos-ansible-builder@vyos-build.iam.gserviceaccount.com
    credentials_file: "{{ ansible_env.HOME }}/.ssh/vyos-ansible-builder.json"
    project_id: vyos-build
    zone: us-west1-a

  tasks:
    - name: Launch vyos build box
      gce:
          instance_names: vyos-build-box
          machine_type: "{{ machine_type }}"
          image: "{{ image }}"
          service_account_email: "{{ service_account_email }}"
          credentials_file: "{{ credentials_file }}"
          project_id: "{{ project_id }}"
          zone: "{{ zone }}"
          state: present
          tags: build-server
      register: gce

    - name: Create disk for building vyos
      gce_pd:
          name: vyos-build-disk
          mode: READ_WRITE
          service_account_email: "{{ service_account_email }}"
          credentials_file: "{{ credentials_file }}"
          project_id: "{{ project_id }}"
          state: present
          instance_name: "{{ gce.instance_data[0].name }}"
          zone: "{{ zone }}"
          delete_on_termination: yes
 

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_ip }} port=22 delay=10 timeout=60
      loop: "{{ gce.instance_data }}"

    - name: Add host to groupname
      add_host: hostname={{ item.public_ip }} groupname=new_instances
      loop: "{{ gce.instance_data }}"

    - name: Use gcloud cli to generate keypair 
      command: gcloud compute ssh vyos-build-box --quiet --zone "{{ zone }}" --command "whoami"

- name: Manage new host
  hosts: new_instances
  become: yes
  gather_facts: True

  vars:
      vyos_iso_url: "{{ iso }}"
      vyos_iso_local: /tmp/vyos.iso
      vyos_key_url: http://packages.vyos.net/vyos-release.gpg
      vyos_key_local: /tmp/vyos-release.gpg

      CD_ROOT: /mnt/cdrom
      CD_SQUASH_ROOT: /mnt/cdsquash
      SQUASHFS_IMAGE: "{{ CD_ROOT }}/live/filesystem.squashfs"

      ROOT_FSTYPE: ext4
      ROOT_PARTITION: "{{ volume_drie}}1"

      WRITE_ROOT: /mnt/wroot
      READ_ROOT: /mnt/squashfs
      INSTALL_ROOT: /mnt/inst_root


  tasks:
          - name: Install some pakages
            apt:
                    update_cache: yes
                    name: 
                      - parted
                      - e2fsprogs
                      - gnupg
                    state: present
          - name: Load aufs module
            shell: modprobe aufs

          - name: Download Vyos ISO release
            get_url:
                  url: "{{ vyos_iso_url }}"
                  dest: "{{ vyos_iso_local }}"

          - name: Mount ISO
            mount:
                    name: "{{ CD_ROOT }}"
                    src: "{{ vyos_iso_local }}"
                    fstype: iso9660
                    opts: loop,ro
                    state: mounted

          - name: Verify checksums of all the fiels in the ISO image
            command: md5sum -c md5sum.txt
            args:
              chdir: "{{ CD_ROOT }}"
            changed_when: False

          - name: Mount squashfs image from ISO
            mount:
              name: "{{ CD_SQUASH_ROOT }}"
              src: "{{ SQUASHFS_IMAGE }}"
              fstype: squashfs
              opts: loop,ro
              state: mounted

          - name: Read version string from iso packages
            shell: cat {{ CD_SQUASH_ROOT }}/opt/vyatta/etc/version | awk '{print $2}' | tr + -
            register: version_string

          - name: Debug version string as read from ISO
            debug: msg="This is version {{ version_string.stdout }}"

